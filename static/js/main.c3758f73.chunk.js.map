{"version":3,"sources":["components/resumePreview.js","data/sample.js","components/resumeGenerator.js","App.js","index.js"],"names":["stringifyDates","start","end","s","Date","toLocaleDateString","month","year","e","ResumePreview","data","theme","basics","work","education","skills","languages","interests","className","picture","src","name","title","summary","email","website","phone","location","address","city","region","profiles","map","p","i","key","network","href","url","w","position","company","startDate","endDate","institution","certificate","field","l","language","fluency","int","sampleData","countryCode","username","level","keywords","ResumeGenerator","useState","setData","setTheme","onChange","selector","document","getElementById","value","id","onSubmit","preventDefault","input","console","log","fetch","then","res","json","type","placeholder","onClick","onEdit","updated_src","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c3758f73.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\n\nconst stringifyDates = (start, end) => {\n  const s = new Date(start).toLocaleDateString('en-US', { month: 'short', year: 'numeric' });\n  let e = 'Present';\n\n  if (new Date(end) != 'Invalid Date') {\n    e = new Date(end).toLocaleDateString('en-US', { month: 'short', year: 'numeric' });\n  }\n  return `${s} - ${e}`;\n}\n\nconst ResumePreview = ({ data, theme }) => {\n  const {\n    basics,\n    work,\n    education,\n    skills,\n    languages,\n    interests\n  } = data\n\n  return (\n    <div className={`resume-preview ${theme}`}>\n      <div className=\"section-basic-info\">\n        <div className=\"picture-name\">\n          {basics.picture &&\n            <img src={basics.picture} className=\"profile-picture\" />\n          }\n          <div className=\"picture-name-right\">\n            {basics.name &&\n              <h1>{basics.name}</h1>\n            }\n            {basics.title &&\n              <h3>{basics.title}</h3>\n            }\n            {basics.summary &&\n              <p>{basics.summary}</p>\n            }\n          </div>\n        </div>\n      </div>\n      <div className=\"section section-socials\">\n        <div className=\"contact-info\">\n          {basics.email &&\n            <p>{basics.email}</p>\n          }\n          {basics.website &&\n            <p>{basics.website}</p>\n          }\n          {basics.phone &&\n            <p>{basics.phone}</p>\n          }\n          {basics.location &&\n            <p>{`${basics.location.address}, ${basics.location.city}, ${basics.location.region}`}</p>\n          }\n        </div>\n        <div className=\"social-media\">\n          {basics.profiles.map((p, i) => (\n            <p key={i}>{`${p.network} : `}<a href={p.url}>{p.url}</a></p>\n          ))}\n        </div>\n      </div>\n    <div className=\"panels\">\n      <div className=\"panel-left\">\n        {work && (\n          <div className=\"section work-experience\">\n            <h2>Work Experience</h2>\n            <ul className=\"work-items\">\n              {work.map((w,i)=> (\n                  <li className=\"item work-item\" key={i}>\n                    <h3>{`${w.position}, ${w.company}`} <span className=\"date\">{stringifyDates(w.startDate, w.endDate)}</span></h3>\n                    <p>{w.summary && w.summary}</p>\n                  </li>\n                )\n              )}\n            </ul>\n          </div>\n        )}\n\n        {education && (\n          <div className=\"section education\">\n            <h2>Education</h2>\n            <ul className=\"education-items\">\n              {education.map((e,i)=> (\n                  <li className=\"item education-item\" key={i}>\n                    <h3>{e.institution}{' '}<span className=\"date\">{stringifyDates(e.startDate, e.endDate)}</span></h3>\n                    <p>{e.certificate && e.certificate}, {e.field && e.field}</p>\n                  </li>\n                )\n              )}\n            </ul>\n          </div>\n        )}\n      </div>\n\n      <div className=\"panel-right\">\n        {skills && (\n          <div className=\"section skills\">\n            <h2>Skills</h2>\n            <ul className=\"skills-items\">\n              {skills.map((s,i)=> (\n                  <li className=\"item skills-item\" key={i}>\n                      <p>{s.name}</p>\n                  </li>\n                )\n              )}\n            </ul>\n          </div>\n        )}\n\n        {skills && (\n          <div className=\"section languages\">\n            <h2>Languages</h2>\n            <ul className=\"languages-items\">\n              {languages.map((l,i)=> (\n                  <li className=\"item languages-item\" key={i}>\n                      <p>{`${l.language} (${l.fluency})`}</p>\n                  </li>\n                )\n              )}\n            </ul>\n          </div>\n        )}\n\n        {interests && (\n          <div className=\"section interests\">\n            <h2>Interests</h2>\n            <ul className=\"interests-items\">\n              {interests.map((int,i)=> (\n                  <li className=\"item languages-item\" key={i}>\n                      <p>{int}</p>\n                  </li>\n                )\n              )}\n            </ul>\n          </div>\n        )}\n\n      </div>\n    </div>\n\n\n    </div>\n  )\n}\n\n\n\nexport default ResumePreview;\n","export const sampleData = {\n  basics: {\n    name: \"Randy Marsh\",\n    title: \"Geologist\",\n    picture: \"https://github.com/clairefro/resume-builder/blob/master/static/images/randy.png?raw=true\",\n    email: \"lorde@gmail.com\",\n    phone: \"(912) 555-4321\",\n    website: `www.tegridy.com`,\n    summary: \"Hemp farmer dating back 0 generations. Seeking new job as my current manager is a towel.\",\n    location: {\n      address: \"2712 Broadway St\",\n      city: \"South Park\",\n      countryCode: \"US\",\n      region: \"Colorado\"\n    },\n    profiles: [{\n      network: \"Linkedin\",\n      username: \"Randy Marsh\",\n      url: \"linkedin.com/in/r-marsh \"\n    },\n    {\n      network: \"Twitter\",\n      username: \"rmarsh\",\n      url: \"https://twitter.com/rmarsh\"\n    }]\n  },\n  work: [{\n    company: \"Tegridy Farms\",\n    position: \"Hemp Farmer\",\n    startDate: \"2019-01-01\",\n    endDate: \"present\",\n    summary: \"Grow and harvest hemp, produce hemp products. Handle accounting.\",\n  },\n  {\n    company: \"South Park Geographical Inst.\",\n    position: \"Researcher\",\n    startDate: \"2008-01-01\",\n    endDate: \"2019-01-01\",\n    summary: \"Go on digs, study rocks, name new rocks\",\n  }],\n  // \"volunteer\": [{\n  //   \"organization\": \"Organization\",\n  //   \"position\": \"Volunteer\",\n  //   \"website\": \"http://organization.com/\",\n  //   \"startDate\": \"2012-01-01\",\n  //   \"endDate\": \"2013-01-01\",\n  //   \"summary\": \"Description...\",\n  //   \"highlights\": [\n  //     \"Awarded 'Volunteer of the Month'\"\n  //   ]\n  // }],\n  education: [{\n    institution: \"University of South Park\",\n    field: \"Geology\",\n    certificate: \"Bachelor\",\n    startDate: \"2004-01-01\",\n    endDate: \"2008-01-01\",\n  },\n  {\n    institution: \"South Park High School\",\n    field: \"General Studies\",\n    certificate: \"HS Diploma\",\n    startDate: \"2000-01-01\",\n    endDate: \"2004-01-01\",\n  }\n],\n  // \"awards\": [{\n  //   \"title\": \"Award\",\n  //   \"date\": \"2014-11-01\",\n  //   \"awarder\": \"Company\",\n  //   \"summary\": \"There is no spoon.\"\n  // }],\n  skills: [{\n    name: \"Web Development\",\n    level: \"Master\",\n    keywords: [\n      \"HTML\",\n      \"CSS\",\n      \"Javascript\"\n    ]\n  },\n  {\n    name: \"Rock identifying\"\n  },\n  {\n    name: \"Hemp spinning\"\n  },\n  {\n    name: \"Singing\"\n  },\n  {\n    name: \"Causing trouble\"\n  },],\n  languages: [{\n    language: \"English\",\n    fluency: \"Native\"\n  },{\n    language: \"Spanish\",\n    fluency: \"Conversational\"\n  },\n],\n  interests: [\n      \"Beer\",\n      \"Cooking\",\n      \"Country living\",\n  ],\n  // \"references\": [{\n  //   \"name\": \"Jane Doe\",\n  //   \"reference\": \"Reference...\"\n  // }]\n}\n","import React, { useState, useEffect } from 'react';\nimport ReactJson from 'react-json-view';\n\nimport ResumePreview from './resumePreview';\n\nimport { sampleData } from '../data/sample';\n\nconst ResumeGenerator = () => {\n  const [data, setData] = useState(sampleData);\n  const [theme, setTheme] = useState('light');\n\n  const handleFetch = (e) => {\n    e.preventDefault();\n    const input = document.getElementById('input-fetch');\n    console.log(input.value)\n    fetch(input.value).then(res => res.json()).then(data=> setData(data))\n  }\n\n  const update = (e) => {\n    const newData = {\n      data: e.updated_src\n    }\n    console.log(e)\n    setData(e.updated_src)\n  }\n\n  const updateTheme = () => {\n    const selector = document.getElementById('theme-select')\n    setTheme(selector.value)\n  }\n\n  const reset = () => {\n    setData(sampleData)\n  }\n\n  return (\n    <div className=\"resume-generator\">\n      <h1>Resume Builder</h1>\n      <h3>Scroll below to edit data</h3>\n\n      <div className='screens'>\n\n        <div className=\"left-screen\">\n          <ResumePreview data={data} theme={theme} />\n        </div>\n        <div className=\"right-screen\">\n          <p>Theme</p>\n          <select onChange={updateTheme} id=\"theme-select\">\n            <option value=\"light\">Light</option>\n            <option value=\"dark\">Dark</option>\n          </select>\n          <form onSubmit={handleFetch}>\n            <input type=\"text\" id=\"input-fetch\" placeholder=\"enter data endpoint\" />\n            <input type=\"submit\" value=\"Fetch data\"/>\n          </form>\n          <button onClick={reset}>Reset data</button>\n          <p>Click the edit pen next to an item, then the check mark to edit the data</p>\n          <ReactJson theme=\"monokai\" src={data} onEdit={update}/>\n        </div>\n\n      </div>\n\n\n\n    </div>\n  )\n}\nexport default ResumeGenerator;\n","import React from 'react';\nimport './styles/index.scss';\n\nimport ResumeGenerator from './components/resumeGenerator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <ResumeGenerator />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}